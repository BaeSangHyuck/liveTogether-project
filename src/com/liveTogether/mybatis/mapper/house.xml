<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http//mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="House">

	<!-- 방 찾기(필터) -->
	<select id="findroom" parameterType="filterDTO"
		resultType="houseDTO">
		select h.houseNumber, r.roomDeposit, r.roomMonthly, h.houseGender,
		h.houseType, h.houseMax
		from tbl_house h join tbl_houseRoom r on
		h.houseNumber = r.houseNumber
		<if test="max!=-1 and min!=-1">
			<trim prefix="and (" suffix=")">
				r.roomMonthly between #{min} and #{max}
			</trim>
		</if>
		<if test="houseGender!=null">
			<trim prefix="and (" suffix=")" prefixOverrides="OR">
				<foreach item="gender" collection="genderArr">
					<trim prefix="OR">
						<choose>
							<when test="gender=='w'.toString()">
								h.houseGender = 'w'
							</when>
							<when test="gender=='m'.toString()">
								h.houseGender = 'm'
							</when>
							<when test="gender=='o'.toString()">
								h.houseGender = 'o'
							</when>
						</choose>
					</trim>
				</foreach>
			</trim>
		</if>
		<if test="houseType!=null">
			<trim prefix="and (" suffix=")" prefixOverrides="OR">
				<foreach item="hType" collection="houseArr">
					<trim prefix="OR">
						<choose>
							<when test="hType =='a'.toString()">
								h.houseType = 'a'
							</when>
							<when test="hType == 'd'.toString()">
								h.houseType = 'd'
							</when>
							<when test="hType == 'v'.toString()">
								h.houseType = 'v'
							</when>
							<when test="hType == 'o'.toString()">
								h.houseType = 'o'
							</when>
						</choose>
					</trim>
				</foreach>
			</trim>
		</if>
		<if test="roomType !=null">
				<trim prefix="and (" suffix=")" prefixOverrides="OR">
					<foreach item="rType" collection="roomArr">
						<trim prefix="OR">
							<choose>
								<when test="rType =='1'.toString()">
									(r.roomType = '1')
								</when>
								<when test="rType =='2'.toString()">
									(r.roomType = '2')
								</when>
								<when test="rType =='3'.toString()">
									(r.roomType = '3')
								</when>
								<when test="rType =='4'.toString()">
									(r.roomType >= '4')
								</when>
							</choose>
						</trim>
					</foreach>
				</trim>
		</if>
		<if test="roomDate != ''">
			and (r.roomDate >= #{roomDate})
		</if>
		group by h.houseNumber
		order by h.houseNumber
	</select>

	<!-- 하우스 전체 리스트 -->
	<select id="selectAll" resultType="houseDTO">
		select th1.houseNumber,
		th2.roomDeposit, th2.roomMonthly, th1.HouseGender, th1.HouseType,
		th1.houseMax
		from tbl_house th1 join tbl_houseRoom th2 on
		th1.houseNumber =
		th2.houseNumber group by th1.houseNumber order by
		th1.houseNumber
	</select>

	<!-- 방 정보조회 -->
	<select id="info" parameterType="_int" resultType="houseVO">
		select
		houseNumber, houseMax, houseStatus, memberId, houseType,
		houseAddress,houseAddressDetail, latitude, longitude, houseLocation,
		houseGender,opAircon, opCentralHeat, opLocalHeat,
		opRefrigerator,opWasher,opGasrange, opInduction, opMicrowave, opDesk,
		opDoorlock, opBed,opCloset, opShoes, opSink, opInterphone, opWindow,
		opCctv, opVeranda,opDelivery,opFirealarm, houseParking, houseElevator,
		housePet,houseContent, houseMessage
		from tbl_house
		where houseNumber = #{houseNumber};
	</select>

	<!-- 방 내놓기 -->
	<insert id="regist" parameterType="houseVO">
		insert into tbl_house
		(houseMax, memberId, houseType, houseAddress,
		houseAddressDetail,
		latitude, longitude, houseLocation, houseGender,
		opAircon, opCentralHeat, opLocalHeat, opRefrigerator,
		opWasher,
		opGasrange, opInduction, opMicrowave, opDesk, opDoorlock,
		opBed,
		opCloset, opShoes, opSink, opInterphone, opWindow, opCctv,
		opVeranda,
		opDelivery, opFirealarm, houseParking, houseElevator,
		housePet,
		houseContent, houseMessage)
		values(#{houseMax}, #{memberId},
		#{houseType}, #{houseAddress}, #{houseAddressDetail},
		#{latitude},
		#{longitude}, #{houseLocation}, #{houseGender}, #{opAircon},
		#{opCentralHeat}, #{opLocalHeat},
		#{opRefrigerator}, #{opWasher},
		#{opGasrange}, #{opInduction},
		#{opMicrowave}, #{opDesk},
		#{opDoorlock},
		#{opBed}, #{opCloset},
		#{opShoes},
		#{opSink},
		#{opInterphone}, #{opWindow}, #{opCctv},
		#{opVeranda}, #{opDelivery},
		#{opFirealarm}, #{houseParking},
		#{houseElevator}, #{housePet},
		#{houseContent},
		#{houseMessage});

		<selectKey keyProperty="id" resultType="_int">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
	</insert>

	<!-- 방 추가 -->
	<insert id="registroom" parameterType="houseRoomVO">
		insert into tbl_houseroom
		(roomName, roomType, roomGender, roomDeposit, roomMonthly, roomArea,
		roomDate, houseNumber)
		values(#{roomName}, #{roomType}, #{roomGender},
		#{roomDeposit}, #{roomMonthly}, #{roomArea}, #{roomDate},
		#{houseNumber});
	</insert>

	<!-- 룸 정보 가져오기 -->
	<select id="roomInfo" parameterType="_int"
		resultType="houseRoomVO">
		select roomNumber, roomName, roomType, roomGender,
		roomDeposit, roomMonthly, roomArea, roomDate, houseNumber
		from
		tbl_houseroom where houseNumber = #{houseNumber};
	</select>

	<!-- 위도경도 가져오기 -->
	<select id="getPosition" resultType="houseVO">
		select houseNumber,
		latitude, longitude from tbl_house;
	</select>




	<!-- admin에 필요한 VO 정보 가져오기 -->
	<select id="selectRealAll" parameterType="map"
		resultType="houseRoomVO">
		select
		roomName, roomType,
		roomGender, roomDeposit,
		roomMonthly, roomArea, roomDate, houseNumber
		from tbl_houseRoom
		order by
		1 desc limit #{startRow}, #{rowCount};
	</select>

	<!-- 페이징 처리 위한 게시글 갯수 가져오기 -->
	<select id="getTotal" resultType="_int">
		select count(roomName)
		from
		tbl_houseRoom
	</select>

	<!-- 하우스넘버로 방 목록에서 지우기 -->
	<delete id="roomDelete" parameterType="_int">
		delete from tbl_houseroom
		where houseNumber=#{houseNumber};
	</delete>

	<delete id="houseDelete" parameterType="_int">
		delete from tbl_house
		where houseNumber=#{houseNumber};
	</delete>

	<select id="houseCount" resultType="_int">
		select count(houseNumber)
		from tbl_house
	</select>

	<select id="waitCount" resultType="_int">
		select count(houseNumber)
		from tbl_house where status = 0
	</select>


</mapper>
